name: CI
on:
  push:
    branches:
      - main  # Trigger on push events to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create .env file in d2strapi folder
        run: |
          echo "ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}" >> d2strapi/.env
          echo "API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}" >> d2strapi/.env
          echo "APP_KEYS=${{ secrets.APP_KEYS }}" >> d2strapi/.env
          echo "DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }}" >> d2strapi/.env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> d2strapi/.env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> d2strapi/.env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> d2strapi/.env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> d2strapi/.env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> d2strapi/.env
          echo "HOST=${{ secrets.HOST }}" >> d2strapi/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> d2strapi/.env
          echo "PORT=${{ secrets.PORT }}" >> d2strapi/.env
          echo "TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}" >> d2strapi/.env

      - name: Verify .env file
        run: cat d2strapi/.env
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build frontend Docker image
        run: |
          docker build -t d2strapi -f d2strapi/Dockerfile .

      - name: Run security scan on frontend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: d2strapi

      - name: Tag and push frontend Docker image
        run: |
          docker tag d2strapi ${{ secrets.DOCKERHUB_USERNAME }}/d2strapi:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/d2strapi:latest
